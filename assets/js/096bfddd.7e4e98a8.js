"use strict";(self.webpackChunkclashofclans_js_org=self.webpackChunkclashofclans_js_org||[]).push([[9859],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),d=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=d(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(t),m=r,g=u["".concat(c,".").concat(m)]||u[m]||p[m]||l;return t?a.createElement(g,o(o({ref:n},s),{},{components:t})):a.createElement(g,o({ref:n},s))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=t[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2989:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return s},default:function(){return u}});var a=t(7462),r=t(3366),l=(t(7294),t(3905)),o=["components"],i={slug:"/updating-to-v2"},c="Updating to v2",d={unversionedId:"updating-to-v2",id:"updating-to-v2",isDocsHomePage:!1,title:"Updating to v2",description:"This new version is a complete TypeScript rewrite to convert everything from plain (literal JSON {}) objects to class (constructor) objects and support a lot more features.",source:"@site/docs/updating-to-v2.md",sourceDirName:".",slug:"/updating-to-v2",permalink:"/docs/updating-to-v2",editUrl:"https://github.com/clashperk/clashofclans.js.org/edit/master/docs/updating-to-v2.md",tags:[],version:"current",frontMatter:{slug:"/updating-to-v2"},sidebar:"sidebar",previous:{title:"Changelog",permalink:"/docs/changelog"},next:{title:"Achievement",permalink:"/docs/api/classes/Achievement"}},s=[{value:"Methods Renamed",id:"methods-renamed",children:[],level:3},{value:"Get Current War",id:"get-current-war",children:[],level:3},{value:"Get CWL Group",id:"get-cwl-group",children:[],level:3},{value:"Get CWL Round",id:"get-cwl-round",children:[],level:3},{value:"Detailed Clan Members",id:"detailed-clan-members",children:[],level:3},{value:"Error Handling",id:"error-handling",children:[],level:3},{value:"Other Changes",id:"other-changes",children:[],level:3},{value:"Properties Renamed",id:"properties-renamed",children:[{value:"Clan",id:"clan",children:[],level:3},{value:"Clan Member",id:"clan-member",children:[],level:3},{value:"WarLog, Clan War, CWL Group",id:"warlog-clan-war-cwl-group",children:[],level:3},{value:"Player",id:"player",children:[],level:3},{value:"Troop",id:"troop",children:[],level:3},{value:"Badge and Icon URLs",id:"badge-and-icon-urls",children:[],level:3}],level:2}],p={toc:s};function u(e){var n=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"updating-to-v2"},"Updating to v2"),(0,l.kt)("p",null,"This new version is a complete TypeScript rewrite to convert everything from plain (literal ",(0,l.kt)("inlineCode",{parentName:"p"},"JSON {}"),") objects to class (constructor) objects and support a lot more features."),(0,l.kt)("h3",{id:"methods-renamed"},"Methods Renamed"),(0,l.kt)("p",null,"All of the methods now have ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," added to the front."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- await client.clan();\n+ await client.getClan();\n\n- await client.player();\n+ await client.getPlayer();\n")),(0,l.kt)("h3",{id:"get-current-war"},"Get Current War"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- await client.currentClanWar();\n+ await client.getClanWar();\n\n// or\n\n+ await client.getCurrentWar();\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The new method ",(0,l.kt)("inlineCode",{parentName:"p"},"client.getCurrentWar()")," returns info about currently running war in the clan for both Regular and CWL Wars."))),(0,l.kt)("h3",{id:"get-cwl-group"},"Get CWL Group"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- await client.clanWarLeague();\n+ await client.getClanWarLeagueGroup();\n")),(0,l.kt)("h3",{id:"get-cwl-round"},"Get CWL Round"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- await client.clanWarLeagueWar();\n+ await client.getClanWarLeagueRound();\n")),(0,l.kt)("h3",{id:"detailed-clan-members"},"Detailed Clan Members"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- const clan = await client.clan('#2PP');\n- await client.detailedClanMembers(clan.memberList);\n\n+ const clan = await client.getClan('#2PP');\n+ await clan.fetchMembers();\n")),(0,l.kt)("h3",{id:"error-handling"},"Error Handling"),(0,l.kt)("p",null,"Additional properties ",(0,l.kt)("inlineCode",{parentName:"p"},"data.ok")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"data.statusCode")," have been removed from class based objects. Now use ",(0,l.kt)("inlineCode",{parentName:"p"},"try {} catch {}")," block to handle errors."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const { HTTPError } = require('clashofclans.js');\n\ntry {\n    const clan = await client.getClan('#2PP');\n} catch (error) {\n    if (error instanceof HTTPError && error.status === 404) {\n        console.log('Clan Not Found.');\n    }\n}\n\ntry {\n    const data = await client.getClanWar('#2PP');\n} catch (error) {\n    if (error instanceof HTTPError && error.reason === 'notFound') {\n        console.log('Clan Not Found.');\n    }\n    if (error instanceof HTTPError && error.reason === 'notInWar') {\n        console.log('Clan is not in War.');\n    }\n}\n")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"HTTPError")," class is a custom error class that is thrown when the API returns an error. Also we have customized few other errors that are thrown when the API returns insufficient data, e.g ",(0,l.kt)("inlineCode",{parentName:"p"},"notInWar")," error for ",(0,l.kt)("inlineCode",{parentName:"p"},"Client#getClanWar()")," method."),(0,l.kt)("p",{parentName:"div"},"Expected values for ",(0,l.kt)("inlineCode",{parentName:"p"},"HTTPError.reason")," are ",(0,l.kt)("inlineCode",{parentName:"p"},"notFound"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"notInWar"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"accessDenied"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"accessDenied.invalidIp"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"privateWarLog"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"badRequest"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"requestThrottled"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"inMaintenance"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"requestAborted"),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"unknownException"),"."))),(0,l.kt)("h3",{id:"other-changes"},"Other Changes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"To make things simpler ",(0,l.kt)("inlineCode",{parentName:"p"},"client.verifyPlayerToken()")," now returns a boolean value.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"Param ",(0,l.kt)("inlineCode",{parentName:"p"},"leagueId")," has been removed where it only accepts Legend League Id (29000022)."))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- client.leagueSeason(leagueId, [options]);\n+ client.getLeagueSeasons([options]);\n\n- client.leagueRanking(leagueId, seasonId, [options])\n+ client.getSeasonRankings(seasonId, [options]);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"client.init()")," method has been replaced with ",(0,l.kt)("inlineCode",{parentName:"li"},"client.login()"))),(0,l.kt)("h2",{id:"properties-renamed"},"Properties Renamed"),(0,l.kt)("h3",{id:"clan"},"Clan"),(0,l.kt)("p",null,"This includes Clan, Searched Clan, Player Clan, Ranked Clan, War Clan and WarLog Clan."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- clan.members\n+ clan.memberCount\n\n- clan.memberList\n+ clan.members\n\n- clan.clanPoints\n+ clan.points\n\n- clan.clanLevel\n+ clan.level\n\n- clan.clanVersusPoints\n+ clan.versusPoints\n\n- clan.requiredTownhallLevel\n+ clan.requiredTownHallLevel\n")),(0,l.kt)("h3",{id:"clan-member"},"Clan Member"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- member.donationsReceived\n+ member.received\n")),(0,l.kt)("h3",{id:"warlog-clan-war-cwl-group"},"WarLog, Clan War, CWL Group"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Clan / Opponent")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- clan.destructionPercentage\n+ clan.destruction\n\n- clan.attacks\n+ clan.attackCount\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Clan War Member")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- member.townhallLevel\n+ member.townHallLevel\n\n- member.opponentAttacks\n+ member.defenseCount\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Clan War Attack")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- attack.destructionPercentage\n+ attack.destruction\n")),(0,l.kt)("h3",{id:"player"},"Player"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- player.donationsReceived\n+ player.received\n\n- player.warPreference\n+ player.warOptedIn // boolean | null\n")),(0,l.kt)("h3",{id:"troop"},"Troop"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- troop.superTroopIsActive\n+ troop.isActive\n")),(0,l.kt)("h3",{id:"badge-and-icon-urls"},"Badge and Icon URLs"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-diff"},"- *.badgeUrls.*\n+ *.badge.large\n+ *.badge.medium\n+ *.badge.small\n\n- *.iconUrls.*\n+ *.icon.medium\n+ *.icon.small\n+ *.icon.tiny\n")))}u.isMDXComponent=!0}}]);